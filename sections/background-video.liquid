<div class="row no-gutters" style="position: relative;">
  <section class="main-slider">
    <div class="item youtube">
      <iframe class="embed-player slide-media" width="980" height="520" src="https://www.youtube.com/embed/QV5EXOFcdrQ?enablejsapi=1&controls=0&fs=0&iv_load_policy=3&rel=0&showinfo=0&loop=1&playlist=QV5EXOFcdrQ&start=1" frameborder="0" allowfullscreen></iframe> 
      <p class="caption">YouTube</p>
    </div>
  </section>
</div>
  <style>
.main-slider .slick-slide, .slick-slide::before, .caption {
	 -webkit-backface-visibility: hidden;
	 backface-visibility: hidden;
}
 .main-slider {
	 position: relative;
	 width: 100%;
	 /* height: 38vw; */
	 min-height: 8vw;
	 margin-bottom: 50px;
	 opacity: 0;
	 visibility: hidden;
	 transition: all 1.2s ease;
}
 .main-slider.slick-initialized {
	 opacity: 1;
	 visibility: visible;
}
.main-slider .slick-slide {
	 position: relative;
	 height: 38vw !important;
}
@media screen and ( max-width:768px ){
    .main-slider .slick-slide {
	 height: auto !important;
}
}
.main-slider .slick-slide iframe {
	 position: relative;
	 pointer-events: none;
}
.main-slider .slick-slide figure {
	 position: relative;
	 height: 100%;
}

 .main-slider .slick-slide .slide-media {
	 animation: slideOut 0.4s cubic-bezier(0.4, 0.29, 0.01, 1);
}
 .main-slider .slick-slide.slick-active {
	 z-index: 1;
}
 .main-slider .slick-slide.slick-active .slide-media {
	 animation: slideIn 2.4s cubic-bezier(0.4, 0.29, 0.01, 1);
}
 .main-slider .slick-slide.slick-active .caption {
	 opacity: 1;
	 transform: translateY(0);
	 transition: all 0.7s cubic-bezier(0.32, 0.34, 0, 1.62) 0.6s;
}
 .caption {
	 position: absolute;
	 top: 44%;
	 left: 5%;
	 text-align: center;
	 padding: 20px;
	 border: 3px solid;
	 color: #fff;
	 margin: 0;
	 font-size: 40px;
	 font-weight: bold;
	 letter-spacing: 0.02em;
	 opacity: 0;
	 z-index: 1;
	 transition: all 0.3s ease;
	 transform: translateY(100px);
}
 .main-slider .slick-dots {
     display: none !important;
	 text-align: center;
	 padding-top: 15px;
}
 .main-slider .slick-dots li {
	 display: inline-block;
	 vertical-align: top;
     margin: 0 8px;
     display: none !important;
}
 .main-slider .slick-dots li button {
     display: none;
}
 @keyframes slideIn {
	 from {
		 filter: blur(15px);
	}
	 to {
		 filter: blur(0);
	}
}
 @keyframes slideOut {
	 from {
		 filter: blur(0);
	}
	 to {
		 filter: blur(15px);
	}
}
  </style>
  <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css" integrity="sha512-yHknP1/AwR+yx26cB1y0cjvQUMvEa2PFzt1c9LlS4pRQ5NOTZFWbhBig+X9G9eYW/8m0/4OXNx8pxJ6z57x0dw==" crossorigin="anonymous" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js" integrity="sha512-XtmMtDEcNz2j7ekrtHvOVR4iwwaD6o/FUJe6+Zq+HgcCsk3kj4uSQQR8weQ2QVj1o0Pk6PwYLohm206ZzNfubg==" crossorigin="anonymous"></script> -->
  <!-- <script>
      var slideWrapper = $(".main-slider"),
    iframes = slideWrapper.find('.embed-player'),
    lazyImages = slideWrapper.find('.slide-image'),
    lazyCounter = 0;

// POST commands to YouTube or Vimeo API
function postMessageToPlayer(player, command){
  if (player == null || command == null) return;
  player.contentWindow.postMessage(JSON.stringify(command), "*");
}

// When the slide is changing
function playPauseVideo(slick, control){
  var currentSlide, slideType, startTime, player, video;

  currentSlide = slick.find(".slick-current");
  slideType = currentSlide.attr("class").split(" ")[1];
  player = currentSlide.find("iframe").get(0);
  startTime = currentSlide.data("video-start");

  if (slideType === "vimeo") {
    switch (control) {
      case "play":
        if ((startTime != null && startTime > 0 ) && !currentSlide.hasClass('started')) {
          currentSlide.addClass('started');
          postMessageToPlayer(player, {
            "method": "setCurrentTime",
            "value" : startTime
          });
        }
        postMessageToPlayer(player, {
          "method": "play",
          "value" : 1
        });
        break;
      case "pause":
        postMessageToPlayer(player, {
          "method": "pause",
          "value": 1
        });
        break;
    }
  }
   else if (slideType === "youtube") {
    switch (control) {
      case "play":
        postMessageToPlayer(player, {
          "event": "command",
          "func": "mute"
        });
        postMessageToPlayer(player, {
          "event": "command",
          "func": "playVideo"
        });
        break;
      case "pause":
        postMessageToPlayer(player, {
          "event": "command",
          "func": "pauseVideo"
        });
        break;
    }
  }
}

// Resize player
function resizePlayer(iframes, ratio) {
  if (!iframes[0]) return;
  var win = $(".main-slider"),
      width = win.width(),
      playerWidth,
      height = win.height(),
      playerHeight,
      ratio = ratio || 16/9;

  iframes.each(function(){
    var current = $(this);
    if (width / ratio < height) {
      playerWidth = Math.ceil(height * ratio);
      current.width(playerWidth).height(height).css({
        left: (width - playerWidth) / 2,
         top: 0
        });
    } else {
      playerHeight = Math.ceil(width / ratio);
      current.width(width).height(playerHeight).css({
        left: 0,
        top: (height - playerHeight) / 2
      });
    }
  });
}

// DOM Ready
$(function() {
  // Initialize
  slideWrapper.on("init", function(slick){
    slick = $(slick.currentTarget);
    setTimeout(function(){
      playPauseVideo(slick,"play");
    }, 1000);
    resizePlayer(iframes, 16/9);
  });
  slideWrapper.on("beforeChange", function(event, slick) {
    slick = $(slick.$slider);
    playPauseVideo(slick,"pause");
  });
  slideWrapper.on("afterChange", function(event, slick) {
    slick = $(slick.$slider);
    playPauseVideo(slick,"play");
  });
  slideWrapper.on("lazyLoaded", function(event, slick, image, imageSource) {
    lazyCounter++;
    if (lazyCounter === lazyImages.length){
      lazyImages.addClass('show');
      // slideWrapper.slick("slickPlay");
    }
  });

  //start the slider
  slideWrapper.slick({
    // fade:true,
    autoplaySpeed:4000,
    lazyLoad:"progressive",
    speed:600,
    arrows:false,
    dots:true,
    cssEase:"cubic-bezier(0.87, 0.03, 0.41, 0.9)"
  });
});

// Resize event
$(window).on("resize.slickVideoPlayer", function(){  
  resizePlayer(iframes, 16/9);
});
  </script> -->
  {% schema %}
  {
    "name": "Backgound Video",
    "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
      },
    {
        "type": "text",
        "id": "title",
        "label": "Title"
    },
    {
        "type": "text",
        "id": "button_text",
        "label": "Button Text"
    },
    {
        "type": "url",
        "id": "link",
        "label": "Link"
    },
      {
          "type": "text",
          "id": "featured_text",
          "label": "Featured Text"
      }
    ],
    "presets": [
      {
        "name": "Backgound Video",
        "category": "Video"
      }
    ]
  }
  {% endschema %}